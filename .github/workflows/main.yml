name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/gh-pages' && ${{ !contains(github.event.head_commit.message, '#ingestion') }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9.6'

      - name: Install dbt
        run: |
          cd integration_tests
          python -m pip install poetry
          python -m poetry install --no-dev

      - name: Setup profiles
        run: |
          mkdir ~/.dbt > /dev/null
          cp integration_tests/profiles/profiles.yml ~/.dbt/profiles.yml

      - name: Build and test dbt package
        working-directory: ./integration_tests
        run: |
          poetry run dbt deps
          poetry run dbt docs generate
          poetry run dbt run-operation compile_money_to_words
          poetry run dbt run --target snowflake
          poetry run dbt test --target snowflake
        env:
          SNOWFLAKE_TEST_ACCOUNT: ${{ secrets.SNOWFLAKE_TEST_ACCOUNT }}
          SNOWFLAKE_TEST_USER: ${{ secrets.SNOWFLAKE_TEST_USER }}
          SNOWFLAKE_TEST_PASSWORD: ${{ secrets.SNOWFLAKE_TEST_PASSWORD }}
          SNOWFLAKE_TEST_ROLE: SYSADMIN
          SNOWFLAKE_TEST_DATABASE: DEMO
          SNOWFLAKE_TEST_WAREHOUSE: COMPUTE_WH

      - name: Save the artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-artifact
          path: ./integration_tests/target

  publish:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v3

      - name: Download the artifacts
        uses: actions/download-artifact@v1
        with:
          name: build-artifact
          path: public

      - name: Publish dbt docs to Github Pages
        uses: ./.github/actions/github-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: public